/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import dao.PhongChieuDao;
import entity.PhongChieu;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import until.Auth;
import until.MsgBox;


/**
 *
 * @author quoct
 */
public class UpdatePC extends javax.swing.JDialog {
    
    
    
    
    public UpdatePC(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHuy = new javax.swing.JButton();
        txtTInhTrang = new javax.swing.JTextField();
        cboMayChieu = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDienTich = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaPhongChieu = new javax.swing.JTextField();
        lblHinh = new ui.LabelRound();
        btnThem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cboAmThanh = new javax.swing.JComboBox<>();
        txtSoGhe = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnHuy.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        txtTInhTrang.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        cboMayChieu.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cboMayChieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Tình Trạng");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Máy chiếu");

        txtDienTich.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Âm thanh");

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setText("Số ghế");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Diện tích");

        txtMaPhongChieu.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        lblHinh.setBackground(new java.awt.Color(255, 255, 255));
        lblHinh.setRoundBottomLeft(30);
        lblHinh.setRoundBottomRight(30);
        lblHinh.setRoundTopLeft(30);
        lblHinh.setRoundTopRight(30);

        btnThem.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnThem.setText("Cập nhật");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Mã phòng chiếu");

        cboAmThanh.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cboAmThanh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtSoGhe.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSoGhe)
                        .addGap(68, 68, 68)
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHuy))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cboMayChieu, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMaPhongChieu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                    .addComponent(txtDienTich, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTInhTrang, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cboAmThanh, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(38, 38, 38)))
                        .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaPhongChieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTInhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboMayChieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblHinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboAmThanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDienTich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnHuy)
                            .addComponent(txtSoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        System.exit(0);
        this.dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        themSua();
    }//GEN-LAST:event_btnThemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdatePC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdatePC dialog = new UpdatePC(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnThem;
    private javax.swing.JComboBox<String> cboAmThanh;
    private javax.swing.JComboBox<String> cboMayChieu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private ui.LabelRound lblHinh;
    private javax.swing.JTextField txtDienTich;
    private javax.swing.JTextField txtMaPhongChieu;
    private javax.swing.JTextField txtSoGhe;
    private javax.swing.JTextField txtTInhTrang;
    // End of variables declaration//GEN-END:variables
    
    PhongChieuDao daopc = new PhongChieuDao();
    
    void init() {
        if (Auth.themSua) {
            this.setForm(Auth.pc);
        } else {
            MsgBox.alert(this, "Thêm phòng chiếu");
            this.fillCboMayChieu();
            this.fillCboAmThanh();
        }

    }
    
    void setForm(PhongChieu pc){
        txtMaPhongChieu.setText(pc.getMaPhong());
        txtTInhTrang.setText(pc.getTinhTrang());
        this.fillCboMayChieu();
        this.fillCboAmThanh();
        txtDienTich.setText(pc.getDienTich());
        txtSoGhe.setText(String.valueOf(pc.getSoLuongGhe()));
        
    }
    
        PhongChieu getForm(){
        PhongChieu pc = new PhongChieu();
        pc.setMaPhong(txtMaPhongChieu.getText());
        pc.setTinhTrang(txtTInhTrang.getText());
        pc.setMayChieu(String.valueOf(cboMayChieu.getSelectedItem()));
        pc.setAmThanh(String.valueOf(cboAmThanh.getSelectedItem()));
        pc.setDienTich(txtDienTich.getText());
        pc.setSoLuongGhe(Integer.valueOf(txtSoGhe.getText()));
        return pc;
    }
    
    void fillCboMayChieu(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMayChieu.getModel();
        model.removeAllElements();
        List<PhongChieu> list = daopc.selectAll();
        List<String> loaiMayChieu = new ArrayList<>();
        boolean khongTrungMc = true;
        for (PhongChieu mc : list) {
            khongTrungMc = true;
            for (String mc1 : loaiMayChieu) {
                if(mc1.equals(mc.getMayChieu())){
                    khongTrungMc = false;
                    break;
                }
            }if (khongTrungMc) {
                loaiMayChieu.add(mc.getMayChieu());
            }
        }
        for(String  st1 : loaiMayChieu){
             model.addElement(st1);
        }
    }

    void fillCboAmThanh(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboAmThanh.getModel();
        model.removeAllElements();
        List<PhongChieu> list = daopc.selectAll();
        List<String> loaiAmThanh = new ArrayList<>();
        boolean khongTrung = true;
        for (PhongChieu at : list) {
            khongTrung = true;
            for (String mc1 : loaiAmThanh) {
                if(mc1.equals(at.getMayChieu())){
                    khongTrung = false;
                    break;
                }
            }if (khongTrung) {
                loaiAmThanh.add(at.getMayChieu());
            }
        }
        for(String at : loaiAmThanh){
             model.addElement(at);
        }
    }
    
    public void clearFormPC() {
//        this.setForm(new PhongChieu());
    }
    
    void themSua() {
        if (Auth.themSua) {
            
            PhongChieu pc = getForm();
            try {
                daopc.update(pc);
                this.clearFormPC();
                MsgBox.alert(this, "Cập nhật thành công!");
                this.dispose();
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!");
                e.printStackTrace();
            }
        } else {
            if (daopc.selectById(txtMaPhongChieu.getText()) != null) {
                MsgBox.alert(this, "Mã phòng chiếu đã tồn tại!");
                txtMaPhongChieu.requestFocus();
                return;
            }
            PhongChieu pc1 = getForm();
            try {
                daopc.insert(pc1);
//                this.clearFormPC();
                this.dispose();
                MsgBox.alert(this, "Thêm thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm thất bại!");
                e.printStackTrace();
            }
        }
    }
}
